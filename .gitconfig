[user]
    name = Alexis Daboville
    email = alexis.daboville@gmail.com

[alias]
    br = branch
    ca = "!f() { git diff --cached --quiet && git add -u; git commit \"$@\" ; }; f"
    ci = commit
    co = checkout
    di = diff
    last = log -1 HEAD
    me = merge
    pop = stash pop
    purr = pull --rebase
    rb = rebase
    ri = rebase -i
    st = status -s

    edit-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; vim -p `f`"
    add-unmerged = "!f() { git diff --name-status --diff-filter=U | cut -f2 ; }; git add `f`"
    ls-unmerged = "diff --name-status --diff-filter=U"

    track-origin = "!git branch --set-upstream-to origin/`git rev-parse --abbrev-ref HEAD`"
    track-fork = "!git branch --set-upstream-to fork/`git rev-parse --abbrev-ref HEAD`"
    fork = "!f() { git remote add fork \"$1\" ; git config remote.pushDefault fork ; }; f"

    forget = update-index --assume-unchanged
    unforget = update-index --no-assume-unchanged
    changed = show --stat --oneline
    # ignored options:
    # -c core.pager='less -S'
    # %<(N,trunc)
    zlog = log --graph --date=relative \
        --pretty=tformat:'%C(cyan)%h%Creset %s %C(green)[%an/%cr]%Creset%C(red)%d%Creset'
    l = zlog --all
    ll = zlog --decorate-refs-exclude=refs/tags
    lll  = "!f() { (git rev-parse -q --verify origin/main ; git rev-parse -q --verify origin/master) | xargs -i git merge-base {} HEAD | xargs -i git ll \"$@\" --ancestry-path {}^..HEAD ; }; f"

    update-all-submodules = submodule foreach git pull origin master
    c = "!f() { git branch --format='%(refname:short)' | fzf | xargs git checkout ; }; f"

    fixup = "!f() { git lll --color | tac | fzf --ansi | awk '{print $2}' | xargs -i -o git ci --fixup {} \"$@\" ; }; f"
    wip = commit -am wip --no-verify

    amend = commit --amend
    branches = branch -vva
    do-not-sign = config commit.gpgSign false
    drop-last = reset --soft HEAD^
    remotes = remote -v
    sign = config commit.gpgSign true
    squash = commit --amend -C HEAD
    tags = tag -l
    tracking = branch -vv
    unstage = reset HEAD

[branch]
    autosetuprebase = always
    sort = -committerdate

[color]
    branch = auto
    diff = auto
    status = auto

[column]
    ui = auto

[commit]
    verbose = true

[core]
    editor = vim
    excludesfile = ~/.cvsignore

[credential]
    helper = cache

[diff]
    algorithm = histogram
    colorMoved = plain
    mnemonicPrefix = true
    renames = true

[fetch]
    all = true
    prune = true
    pruneTags = true

[merge]
    autoStash = true
    ff = false
    tool = vimdiff

[pull]
    ff = only

[push]
    autoSetupRemote = true
    default = current

[rebase]
    autoSquash = true
    autoStash = true
    updateRefs = true

[rerere]
    autoupdate = true
    enabled = true

[tags]
    sort = version:refname

[spice "branchCreate"]
    commit = false
